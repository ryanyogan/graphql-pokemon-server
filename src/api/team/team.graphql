type Team {
  # The unique ID of a Team
  id: ID!

  # The unique Name of a Team
  name: String!

  # All of the Pokemon that a Team contains
  pokemons(limit: Int): [Pokemon]!
}

input CreateTeamInput {
  # The name of the Team you would like to create (required)
  name: String!

  # Optionally you made add Pokemon by their ID's to the team initially
  pokemons: [ID!]
}

input UpdateTeamInput {
  # The ID of the team you would like to update (required)
  id: ID!

  # The name of the team (optional)
  name: String

  # The ID(s) of Pokemon you would like your team to consist of
  pokemons: [ID!]
}

extend type Query {
  # Returns a single team based on the unique ID (required)
  team(id: ID!): Team!

  # Returns a list of all Teams
  allTeams(limit: Int): [Team]!

  # Returns the count of Pokemon for a Team based on the ID provided
  teamCount(id: ID!): Int!
}

type Mutation {
  # Creates a new team!
  createTeam(input: CreateTeamInput!): Team!

  # Update a team based on its ID (required)
  updateTeam(input: UpdateTeamInput!): Team!

  # Adds a Pokemon to your team based on the Pokemon ID! Please note
  # that if you have more than 6 Pokemon (see: teamCount) you will
  # not be able to additional Pokemon until you remove one.
  addPokemon(pokemonId: ID!): Team!
}
